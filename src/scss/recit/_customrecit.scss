/*popover*/

$dark3-color:     #989ca8;
$dark2-color:     #5f6976;
$secondary-color: #04a0b2;

body {
  /*padding: 20px;*/
  /*text-align: center;*/
}

.popover-block-container {
    .popover-icon {
        background: none;
        color: none;
        border: none;
        padding: 0;
        outline: none;
        cursor: pointer;
        i {
            color: $secondary;
            text-align: center;
            margin-top:4px;
        }
      }
  } 
  .popover-header {
      display: none;
  }
  .popover {
    max-width: 306.6px;
    border-radius: 6px;
    border: none;
    box-shadow: 0 0 6px 1px #eee;
  }
  .popover-body {
    border: none;
    padding: 20px 49.4px 24px 24px;
    color: $dark2-color;
    font-size: 15px;
    font-style: italic;
    z-index: 2;
    line-height: 1.53;
    letter-spacing: 0.1px;
    .popover-close {
        position: absolute;
        top: 5px;
        right: 10px;
        opacity: 1;

        .material-icons {
            font-size: 16px;
            font-weight: bold;
            color: $secondary;
        }

    }
}
/*Importer de mobirise*/

.recit90 {
  padding-top: 90px;
  padding-bottom: 90px;
}
/*Onglet*/

body {
  /* Set "my-sec-counter" to 0 */
  counter-reset: arts-tab-counter;
}
/*#tabintro::before {
	  content:" ";
	  display: block!important;
	 background: url("https://recitfad.ca/depot/virtuose-hero-oeuvre-cropped.png") no-repeat!important;
    width: 209px!important;
    height: 694px!important;
    float: left!important;
	position: relative!important;
	top:300px!important;
	left:auto!important;
}*/
#tabcontent{
	display: flex!important;
	 /*align-items: center;*/
	 justify-content: center!important;
	 /*align-self: center!important;-ms-flex-pack:center!important;justify-content:center!important;*/
	 } 
/* SpryTabbedPanels.css - version 0.6 - Spry Pre-Release 1.6.1 */

/* Copyright (c) 2006. Adobe Systems Incorporated. All rights reserved. */

/* Horizontal Tabbed Panels
 *
 * The default style for a TabbedPanels widget places all tab buttons
 * (left aligned) above the content panel.
 */

/* This is the selector for the main TabbedPanels container. For our
 * default style, this container does not contribute anything visually,
 * but it is floated left to make sure that any floating or clearing done
 * with any of its child elements are contained completely within the
 * TabbedPanels container, to minimize any impact or undesireable
 * interaction with other floated elements on the page that may be used
 * for layout.
 *
 * If you want to constrain the width of the TabbedPanels widget, set a
 * width on the TabbedPanels container. By default, the TabbedPanels widget
 * expands horizontally to fill up available space.
 *
 * The name of the class ("TabbedPanels") used in this selector is not
 * necessary to make the widget function. You can use any class name you
 * want to style the TabbedPanels container.
 */
.TabbedPanels {
	overflow: auto;
	margin: 0px;
	padding: 0 !important;
	clear: none;
	background-color: #d3e3ed;	
	width: 100%; /* IE Hack to force proper layout when preceded by a paragraph. (hasLayout Bug)*/
}

/* This is the selector for the TabGroup. The TabGroup container houses
 * all of the tab buttons for each tabbed panel in the widget. This container
 * does not contribute anything visually to the look of the widget for our
 * default style.
 *
 * The name of the class ("TabbedPanelsTabGroup") used in this selector is not
 * necessary to make the widget function. You can use any class name you
 * want to style the TabGroup container.
 */
.TabbedPanelsTabGroup {
	margin: 0px;
	padding: 0px;
		
}

/* This is the selector for the TabbedPanelsTab. This container houses
 * the title for the panel. This is also the tab "button" that the user clicks
 * on to activate the corresponding content panel so that it appears on top
 * of the other tabbed panels contained in the widget.
 *
 * For our default style, each tab is positioned relatively 1 pixel down from
 * where it wold normally render. This allows each tab to overlap the content
 * panel that renders below it. Each tab is rendered with a 1 pixel bottom
 * border that has a color that matches the top border of the current content
 * panel. This gives the appearance that the tab is being drawn behind the
 * content panel.
 *
 * The name of the class ("TabbedPanelsTab") used in this selector is not
 * necessary to make the widget function. You can use any class name you want
 * to style this tab container.
 */
.TabbedPanelsTab {
	position: relative;
	top: 0px!important;
	float: left !important;
	 display: flex!important;
	 align-items: center;
	 /*justify-content: center!important;*/
	 /*align-self: center!important;*/
	height: 50px !important;
	width: 25%;
	text-align: center ;
	padding: 0px 0px!important;
	margin: 0px 0px 0px 0px !important;
	font: bold 18px $subheadings-font-family !important;
	background-color: #d3e3ed !important;
	list-style: none !important;
	border-left: none !important;
	border-bottom: none !important;
	border-top: none!important;
    border-right: solid 10px #fff !important;
	-moz-user-select: none;
	-khtml-user-select: none;
	cursor: pointer;
       border-top-right-radius: 0px !important;
        border-top-left-radius: 0px !important;
        -moz-border-radius-topright: 0px !important;
        -moz-border-radius-topleft: 0px !important;
        -webkit-border-top-right-radius: 0px !important;
        -webkit-border-top-left-radius: 0px !important;
    color: #FFF!important;
    outline: none !important;
}

@media screen and (max-width: 768px) {
    .TabbedPanelsTab {
        width: 50%;
    }
    .TabbedPanelsTab:nth-child(even) {
        border-right: none !important;
    }
}

@media screen and (max-width: 480px) {
    .TabbedPanelsTab {
        width: 100%;
        border-right: none !important;
    }
}

.TabbedPanelsTab:last-child {
    border-right: none !important;
}
.TabbedPanelsTab::before {
	counter-increment: arts-tab-counter;
  content:  counter(arts-tab-counter, upper-latin) !important;
  /*display: block;*/
  display: flex!important;
	 align-items: center;
	 justify-content: center!important;
	 align-self: center!important;
	/*background: url("icon.jpg") no-repeat;*/
    width: 50px;
    height: 50px;
    background-color: #afcadb !important;
    float: left;
    margin: 0 10px 0 0 !important;
}
.dir-rtl .TabbedPanelsTab {float: right;}

/* This selector is an example of how to change the appearnce of a tab button
 * container as the mouse enters it. The class "TabbedPanelsTabHover" is
 * programatically added and removed from the tab element as the mouse enters
 * and exits the container.
 */
.TabbedPanelsTabHover {
	background-color: #339900;
}

/* This selector is an example of how to change the appearance of a tab button
 * container after the user has clicked on it to activate a content panel.
 * The class "TabbedPanelsTabSelected" is programatically added and removed
 * from the tab element as the user clicks on the tab button containers in
 * the widget.
 *
 * As mentioned above, for our default style, tab buttons are positioned
 * 1 pixel down from where it would normally render. When the tab button is
 * selected, we change its bottom border to match the background color of the
 * content panel so that it looks like the tab is part of the content panel.
 */
.TabbedPanelsTabSelected {
	background-color: #006bb5 !important;
	border-bottom: 1px solid #EEE;
        color: #fff !important;
}
.TabbedPanelsTabSelected::before {
	counter-increment: arts-tab-counter;
  content:  counter(arts-tab-counter, upper-latin) !important;
  display: block;
    background-color: #005896 !important;
	/*background: url("icon.jpg") no-repeat;*/
    width: 50px;
    height: 50px;
    float: left;
    margin: 0 0 0 0
}

/* This selector is an example of how to make a link inside of a tab button
 * look like normal text. Users may want to use links inside of a tab button
 * so that when it gets focus, the text *inside* the tab button gets a focus
 * ring around it, instead of the focus ring around the entire tab.
 */
.TabbedPanelsTab a {
	color: black;
	text-decoration: none;
}

/* This is the selector for the ContentGroup. The ContentGroup container houses
 * all of the content panels for each tabbed panel in the widget. For our
 * default style, this container provides the background color and borders that
 * surround the content.
 *
 * The name of the class ("TabbedPanelsContentGroup") used in this selector is
 * not necessary to make the widget function. You can use any class name you
 * want to style the ContentGroup container.
 */
.TabbedPanelsContentGroup {
	clear: both;
	//max-width: 1200px;
	border-left: solid 1px #CCC;
	border-bottom: solid 1px #CCC;
	border-top: solid 1px #999;
	border-right: solid 1px #999;
	background-color: #FFF;
}

/* This is the selector for the Content panel. The Content panel holds the
 * content for a single tabbed panel. For our default style, this container
 * provides some padding, so that the content is not pushed up against the
 * widget borders.
 *
 * The name of the class ("TabbedPanelsContent") used in this selector is
 * not necessary to make the widget function. You can use any class name you
 * want to style the Content container.
 */
.TabbedPanelsContent {
	overflow: hidden;
	padding: 4px;
}

/* This selector is an example of how to change the appearnce of the currently
 * active container panel. The class "TabbedPanelsContentVisible" is
 * programatically added and removed from the content element as the panel
 * is activated/deactivated.
 */
.TabbedPanelsContentVisible {
}

/* Vertical Tabbed Panels
 *
 * The following rules override some of the default rules above so that the
 * TabbedPanels widget renders with its tab buttons along the left side of
 * the currently active content panel.
 *
 * With the rules defined below, the only change that will have to be made
 * to switch a horizontal tabbed panels widget to a vertical tabbed panels
 * widget, is to use the "VTabbedPanels" class on the top-level widget
 * container element, instead of "TabbedPanels".
 */

.VTabbedPanels {
	overflow: hidden;
	zoom: 1;
}

/* This selector floats the TabGroup so that the tab buttons it contains
 * render to the left of the active content panel. A border is drawn around
 * the group container to make it look like a list container.
 */
.VTabbedPanels .TabbedPanelsTabGroup {
	float: left;
	width: 10em;
	height: 20em;
	background-color: #003300;
	position: relative;
	border-top: solid 1px #999;
	border-right: solid 1px #999;
	border-left: solid 1px #CCC;
	border-bottom: solid 1px #CCC;
    color: #003300;
}
.dir-rtl .VTabbedPanels .TabbedPanelsTabGroup {float: right;}

/* This selector disables the float property that is placed on each tab button
 * by the default TabbedPanelsTab selector rule above. It also draws a bottom
 * border for the tab. The tab button will get its left and right border from
 * the TabGroup, and its top border from the TabGroup or tab button above it.
 */
.VTabbedPanels .TabbedPanelsTab {
	float: none;
	margin: 0px;
	border-top: none;
	border-left: none;
	border-right: none;
}

/* This selector disables the float property that is placed on each tab button
 * by the default TabbedPanelsTab selector rule above. It also draws a bottom
 * border for the tab. The tab button will get its left and right border from
 * the TabGroup, and its top border from the TabGroup or tab button above it.
 */
.VTabbedPanels .TabbedPanelsTabSelected {
	background-color: #003300;
	border-bottom: solid 1px #999;
}

/* This selector floats the content panels for the widget so that they
 * render to the right of the tabbed buttons.
 */
.VTabbedPanels .TabbedPanelsContentGroup {
	clear: none;
	float: left;
	padding: 0px;
	width: 30em;
	height: 20em;
}
.dir-rtl .VTabbedPanels .TabbedPanelsContentGroup {float:right;}

/* Styles for Printing */
@media print {
    .TabbedPanels {
        overflow: visible !important;
    }
    .TabbedPanelsContentGroup {
        display: block !important;
        overflow: visible !important;
        height: auto !important;
    }
    .TabbedPanelsContent {
        overflow: visible !important;
        display: block !important;
        clear:both !important;
    }
    .TabbedPanelsTab {
         overflow: visible !important;
         display: block !important;
         clear:both !important;
    }
}
.recit-fullscreen .recit-overlay {
  min-height: 100vh;
}

.recit-fullscreen {
  display: flex;
  display: -moz-flex;
  display: -ms-flex;
  display: -o-flex;
  align-items: center;
  -webkit-align-items: center;
  min-height: 100vh;
  padding-top: 3rem;
  padding-bottom: 3rem;
  .container {
    width: 100%;
    padding-right: 15px;
    padding-left: 15px;
    margin-right: auto;
  margin-left: auto;
  }
  .p-5 {
    padding: 3rem!important;
    padding-top: 3rem !important;
    padding-right: 3rem !important;
    padding-bottom: 3rem !important;
    padding-left: 3rem !important;
}
}
/* wiris*/
.wirisembeddedtextinput{
width: 80px !important;
}
.invisible {
display: none;
}
.recit-media-container-column {
    padding: 1rem !important;
  }
  
.row{
	background-color: transparent !important;
	}

/*recit*/
.bg-secondary {
	background-color: $secondary !important;
	}
	.bg_secondary2 { background: linear-gradient(15deg, $secondary 25%, $info 25%);
	background: -webkit-linear-gradient(15deg, $secondary 25%, $info  25%);
    background: -o-linear-gradient(15deg, $secondary 25%, $info  25%);
    background: -ms-linear-gradient(15deg, $secondary 25%, $info  25%);
 }
.bg-primary {
  background-color: $primary !important;
}
.bg-success {
  background-color: $success !important;
}
.bg-info {
  background-color: $info !important;
				   
						   
}
.bg-warning {
  background-color: $warning !important;
}
.bg-danger {
  background-color: $danger !important;
		}	
	/*-=-=-=-==-=---=Bouton-=-=-=-===-=-=-=*/	
.btn-round{-moz-border-radius: $btn-radius;
  -webkit-border-radius: $btn-radius;
  border-radius: $btn-radius;}
.btn-square{-moz-border-radius: 0px;
  -webkit-border-radius: 0px;
  border-radius: 0px;}
  
.recit-white {
  color: #ffffff; }  
.recit-light {
  font-weight: 300; }
.recit-bold {
  font-weight: 700; }
  
/*! Text-aligns */
.align-left {
  text-align: left; }

.align-center {
  text-align: center; }

.align-right {
  text-align: right; }
  
.align-jusitfy {
  text-align: jusitfy; }
  
.recit-section-title {
  font-style: normal;
  line-height: 1.2;
}
.recit-section-subtitle {
  line-height: 1.3;
  font-family: $headings-font-family;
}
.recit-text {
  font-style: normal;
  line-height: 1.6;
}
.recit-display-1 {
    font-family: $headings-font-family; //$subheadings-font-family;
  font-size: 4.25rem;
  text-transform: none;				   
}
.recit-display-1 > .recit-iconfont {
  font-size: 6.8rem;
}
.recit-display-2 {
  font-family: $subheadings-font-family;
  font-size: 3rem;
}

.recit-display-2 > .recit-iconfont {
  font-size: 4.8rem;
}
.recit-display-4 {
  font-family: $subheadings-font-family;
  font-size: 1rem;
}
.recit-display-4 > .recit-iconfont {
  font-size: 1.6rem;
}
.recit-display-5 {
  font-family: $subheadings-font-family!important;
  font-size: 1.5rem;
  letter-spacing: .2rem;
}
.recit-display-5 > .recit-iconfont {
  font-size: 2.4rem;
}
.recit-display-5 h3 {
font-family: "vigaregular",sans-serif;
}
.recit-display-7 {
  font-family: $subheadings-font-family;
  font-size: 1rem;
}
.recit-display-7 > .recit-iconfont {
  font-size: 1.6rem;
}
.recit-display-1 > .mbr-iconfont {
  font-size: 6.8rem;
}



/* ---- Fluid typography for mobile devices ---- */
/* 1.4 - font scale ratio ( bootstrap == 1.42857 ) */
/* 100vw - current viewport width */
/* (48 - 20)  48 == 48rem == 768px, 20 == 20rem == 320px(minimal supported viewport) */
/* 0.65 - min scale variable, may vary */
@media (max-width: 768px) {
  .recit-display-1 {
    font-size: 3.4rem;
    font-size: calc( 2.1374999999999997rem + (4.25 - 2.1374999999999997) * ((100vw - 20rem) / (48 - 20)));
    line-height: calc( 1.4 * (2.1374999999999997rem + (4.25 - 2.1374999999999997) * ((100vw - 20rem) / (48 - 20))));
  }
  .recit-display-2 {
    font-size: 2.4rem;
    font-size: calc( 1.7rem + (3 - 1.7) * ((100vw - 20rem) / (48 - 20)));
    line-height: calc( 1.4 * (1.7rem + (3 - 1.7) * ((100vw - 20rem) / (48 - 20))));
  }
  .recit-display-4 {
    font-size: 0.8rem;
    font-size: calc( 1rem + (1 - 1) * ((100vw - 20rem) / (48 - 20)));
    line-height: calc( 1.4 * (1rem + (1 - 1) * ((100vw - 20rem) / (48 - 20))));
  }
  .recit-display-5 {
    font-size: 1.2rem;
    font-size: calc( 1.175rem + (1.5 - 1.175) * ((100vw - 20rem) / (48 - 20)));
    line-height: calc( 1.4 * (1.175rem + (1.5 - 1.175) * ((100vw - 20rem) / (48 - 20))));
  }
}

  
 .recit-row {
	background-color: rgba(255,255,255,0.0);
	padding:0;}
	
  .iconlivre {
		background-image: url(https://moodledev.recitfad.ca/pix/icon_livre.png);
		background-position: center;
        background-repeat: no-repeat;
        background-size: contain;
		height: 150px;
		max-width: 100%;
		}
		.numero{
		background-color:$primary;
		max-width: 100%;
		color:white;
		}
.recitcahierlabel {
	font-size: 18px;
		color: white;
}
.cahier1 {
		background-image: url(https://moodledev.recitfad.ca/file.php/12/8.png);
		background-position: center;
        background-repeat: no-repeat;
        background-size: cover;
		height: 100%;
		width: 100%;
		}
.prompt{
padding-bottom:20px;
}
body#page-filter-embedquestion-showquestion .que .info > div {
display: none;
} 
/*	.que.prompt{
padding-bottom:20px;
}


  .submit > .ld {
    font-size: initial
  }
.que .formulation {
                background-color:#fff;
                font-family: Viga, Ubuntu, sans-serif;
                font-size: 18px;
}
.que .info {
float: none;
width: auto;
}
.que.description .info {
display: none;
}
.que.ddimageortext .group1{
                background-color:transparent;
                }
.que .info > div {
margin-left: 15px;
margin-right: 15px;
}
.que .info > div {
display: inline;
}
.que .content {
margin: 0 0 0 0;
width: auto;
}
.que .info {
    background-color: #eee;
    border: 1px solid #bce8f1;
    border-radius: 4px;
    margin-bottom: -5px;
    padding: 8px;
    }
.que h3.no {
    display: inline;
    font-size: 12px;
    line-height: 1;
    margin-left: 10px;
}

.que .qtext {
       line-height: 23px;
	font-size: 16px;
	color: #000;
}
*/


/*Change question appearance*/

.que{
  max-width: 95%;
}
.que .info {
  background-color: #F3F3F3;
  float: none;
  width: auto;
  border-radius: 5px 5px 0 0;
  margin-bottom: 1px;
  border: 1px solid #D4E4DB;
  padding-bottom: 15px;
}
.que .content {
  margin: 0;
}
.que .formulation {
  border-radius: 0px 0px 6px 6px;
}

.que h3.no {
  color: #165920;
  margin-right: 50px;
  font-size: 1.2em;
  text-transform: capitalize;
  display: inline-block;
}
.que span.qno {
  color: #165920;
  font-size: 1.2em;
}

.que .info > div {

  font-size: 1em;
  color: #237152;
  display: inline-block;
  margin-right: 25px
}

.que .info > div.state, .que .info > div.grade {
  font-size: 0.9em;
  color: #323836;
}

.que .info > div.questionflag, .que .info > div.editquestion {
  font-weight: bold;
}

.que .formulation{
  color: #2F2E2E;
  background: #D4E4DB;
  border: 1px #CECECE solid;
}
.recit-alert{
    position: absolute;
    padding-right: 55px;
	padding-left: 30px;
    width: 80%;
    padding-bottom: 20px;
	font-family: $subheadings-font-family;
    border-radius: 15px;
    background-color: #FFF;
    color: #000;
    -webkit-box-shadow: 0px 0px 10px 0px rgba(0,0,0,0.75);
    -moz-box-shadow: 0px 0px 10px 0px rgba(0,0,0,0.75);
    box-shadow: 0px 0px 10px 0px rgba(0,0,0,0.75);
    display: block;
}
multichoice .answer div.r0, .que.multichoice .answer div.r1 {
  padding: .3em 0 .3em 25px;
  text-indent: -25px;}
.que.multichoice .answer div.r0, .que.multichoice .answer div.r1 {
  padding: .3em 0 .3em 25px;
  text-indent: -25px;}
  
/*alert-success*/
.alert-success button{
    background-color: $success;
    color:#FFF;
}

.alert-success hr{
        border-color: $success;
}
/*alert-danger*/
.alert-danger button{
    background-color: $danger;
    color:#FFF;
}

.alert-danger hr{
        border-color: $danger;
}
/*alert-primary*/
.alert-primary button{
    background-color: $primary;
    color:#FFF;
}

.alert-primary hr{
        border-color: $primary;
}
/*alert-secondary*/
.alert-secondary button{
    background-color: $secondary;
    color:#FFF;
}

.alert-secondary hr{
        border-color: $secondary;
}/**/
/*alert-warning*/
.alert-warning button{
    background-color: $warning;
    color:#FFF;
}

.alert-warning hr{
        border-color: $warning;
}
/**/
/*alert-error*/
.alert-error button{
    background-color: #FF0000;
    color:#FFF;
}

.alert-error hr{
    border-color: #FF0000;
}
/**/

.hr-alert {
    margin-top: 0px;
    margin-bottom: 10px;
    border: 0;
    border-top: 4px solid #eee;
}

.btn-circle {
  width: 30px;
  height: 30px;
  text-align: center;
  padding: 6px 0;
  font-size: 12px;
  line-height: 1.428571429;
  border-radius: 15px;
  display:-webkit-flex; -webkit-justify-content:center; -webkit-align-items:center;
  display:flex; justify-content:center; align-items:center; /* pour centrer les images */
}
.btn-circle.btn-lg {
  width: 50px;
  height: 50px;
  padding: 10px 16px;
  font-size: 18px;
  line-height: 1.33;
  border-radius: 25px;
  display:-webkit-flex; -webkit-justify-content:center; -webkit-align-items:center;
  display:flex; justify-content:center; align-items:center; /* pour centrer les images */
}
.btn-circle.btn-xl-alert  {
  width: 70px;
  height: 70px;
 /* padding: 10px 16px;*/
  font-size: 24px;
  line-height: 1.33;
  border-radius: 35px;
  cursor:default;
  transition: background-color 1s, color 1s;
  display:-webkit-flex; -webkit-justify-content:center; -webkit-align-items:center;
  display:flex; justify-content:center; align-items:center; /* pour centrer les images */
}

.btn-float-alert{
    position: absolute;
    right:-20px;
    top:-20px;
}

.recit-retrait-gauche {
    position: relative;
    left: 10%;
	/*padding-right:200px;*/
	top:50px;
	padding-bottom : 50px;
} 


.image-haut {
      position: relative;
      height: 400px;
      /*shape-inside: polygon(0 0,  20 100, 100 100, 00 100);*/
      }
.clippass{
    background-color: $primary;
    position: absolute;
       right: 0;
      width: 400px;
    height: 70px;    
      -webkit-clip-path: polygon(0 0, 100% 0, 100% 100%, 10% 99%);
		clip-path: polygon(0 0, 100% 0, 100% 100%, 10% 99%);}
.fleche1{
    background-color: $primary;
    position: absolute;
       left: 0;
	   width: 50px;
    height: 100px;
            -webkit-clip-path: polygon(0 0, 100% 50%, 0 100% );
			clip-path: polygon(0 0, 100% 50%, 0 100% );
		}
.image-haut1 {
      position: relative;
      height: 300px;
      /*shape-inside: polygon(0 0,  20 100, 100 100, 00 100);*/
      }
      .clippass1{
    background-color: $danger;
	font-family: $font-family-sans-serif !important;
    position: absolute;
       right: 0;
      width: 250px;
    height: 60px;    
      -webkit-clip-path: polygon(0 0, 100% 0, 100% 100%, 10% 100%);
clip-path: polygon(0 0, 100% 0, 100% 100%, 10% 100%);
}


      .clippass1a{
    background-color: white;
    position: absolute;
       right: 0;
      width: 400px;
    height: 50px;    
      -webkit-clip-path: polygon(0 0, 100% 0, 100% 100%, 10% 100%);
clip-path: polygon(0 0, 100% 0, 100% 100%, 10% 100%);
}
 .clippass1b{
    background-color: rgba(208, 24, 30, 0.5);
    position: absolute;
       left: 0px;
	   bottom: 0px;
      width: 100px;
    height: 150px;    
      -webkit-clip-path: polygon(0% 100%, 100% 100%, 0% 0%);
clip-path: polygon(0% 100%, 100% 100%, 0% 0%);
}
 .clippass1c{
    background-color: $danger;
    position: absolute;
       left: 0px;
	   top: 55px;
      width: 300px;
    height: 7px;    
      -webkit-clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
}

.image-haut2 {
      position: relative;
      height: 300px;
      /*shape-inside: polygon(0 0,  20 100, 100 100, 00 100);*/
      }
      .clippass2{
    background-color: $secondary;
	font-family: $font-family-sans-serif !important;
    position: absolute;
       right: 0;
      width: 250px;
    height: 60px;    
      -webkit-clip-path: polygon(0 0, 100% 0, 100% 100%, 10% 100%);
clip-path: polygon(0 0, 100% 0, 100% 100%, 10% 100%);
}


      .clippass2a{
    background-color: white;
    position: absolute;
       right: 0;
      width: 400px;
    height: 50px;    
      -webkit-clip-path: polygon(0 0, 100% 0, 100% 100%, 10% 100%);
clip-path: polygon(0 0, 100% 0, 100% 100%, 10% 100%);
}
 .clippass2b{
    background-color: rgba(0, 155, 205, 0.5);
    position: absolute;
       left: 0px;
	   bottom: 0px;
      width: 100px;
    height: 150px;    
      -webkit-clip-path: polygon(0% 100%, 100% 100%, 0% 0%);
clip-path: polygon(0% 100%, 100% 100%, 0% 0%);
}
 .clippass2c{
    background-color: $secondary;
    position: absolute;
       left: 0px;
	   top: 55px;
      width: 300px;
    height: 7px;    
      -webkit-clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
}

.image-haut3 {
      position: relative;
      height: 300px;
      /*shape-inside: polygon(0 0,  20 100, 100 100, 00 100);*/
      }
      .clippass3{
    background-color: $info;
	font-family: $font-family-sans-serif !important;
    position: absolute;
       right: 0;
      width: 250px;
    height: 60px;    
      -webkit-clip-path: polygon(0 0, 100% 0, 100% 100%, 10% 100%);
clip-path: polygon(0 0, 100% 0, 100% 100%, 10% 100%);
}


      .clippass3a{
    background-color: white;
    position: absolute;
       right: 0;
      width: 400px;
    height: 50px;    
      -webkit-clip-path: polygon(0 0, 100% 0, 100% 100%, 10% 100%);
clip-path: polygon(0 0, 100% 0, 100% 100%, 10% 100%);
}
 .clippass3b{
    background-color: rgba(251, 177, 64, 0.5);
    position: absolute;
       left: 0px;
	   bottom: 0px;
      width: 100px;
    height: 150px;    
      -webkit-clip-path: polygon(0% 100%, 100% 100%, 0% 0%);
clip-path: polygon(0% 100%, 100% 100%, 0% 0%);
}
 .clippass3c{
    background-color: $info;
    position: absolute;
       left: 0px;
	   top: 55px;
      width: 300px;
    height: 7px;    
      -webkit-clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
}

.image-haut4 {
      position: relative;
      height: 300px;
      /*shape-inside: polygon(0 0,  20 100, 100 100, 00 100);*/
      }
      .clippass4{
    background-color: $success;
	font-family: $font-family-sans-serif !important;
    position: absolute;
       right: 0;
      width: 250px;
    height: 60px;    
      -webkit-clip-path: polygon(0 0, 100% 0, 100% 100%, 10% 100%);
clip-path: polygon(0 0, 100% 0, 100% 100%, 10% 100%);
}


      .clippass4a{
    background-color: white;
    position: absolute;
       right: 0;
      width: 400px;
    height: 50px;    
      -webkit-clip-path: polygon(0 0, 100% 0, 100% 100%, 10% 100%);
clip-path: polygon(0 0, 100% 0, 100% 100%, 10% 100%);
}
 .clippass4b{
    background-color: rgba(183, 210, 51, 0.5);
    position: absolute;
       left: 0px;
	   bottom: 0px;
      width: 100px;
    height: 150px;    
      -webkit-clip-path: polygon(0% 100%, 100% 100%, 0% 0%);
clip-path: polygon(0% 100%, 100% 100%, 0% 0%);
}
.clippass4c{
    background-color: $success;
    position: absolute;
       left: 0px;
	   top: 55px;
      width: 300px;
    height: 7px;    
      -webkit-clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
}
 

 .recit220 {
  padding-top: 60px;
  padding-bottom: 15px;
  }  
.recit-para1 {
  padding-top: 30px;
  padding-bottom: 30px;
  background-color: #2e2e2e;
}
.recit-para1 .line {
 /* background-color: #ffffff;
  color: #ffffff;*/
  align: center;
  height: 4px;
  margin: 0 auto;
}
.recit-para1 .section-text {
  padding: 2rem 0;
}
.recit-para1 .inner-container {
  margin: 0 auto;
}
@media (max-width: 768px) {
  .recit-para1 .inner-container {
    width: 100% !important;
  }
}
.recit-para2 {
  padding-top: 30px;
  padding-bottom: 30px;
  background-color: #ffffff;
}
.recit-para2 .line {
  /*background-color: #149dcc;
  color: #149dcc;*/
  align: center;
  height: 4px;
  margin: 0 auto;
}
.recit-para2 .section-text {
  padding: 2rem 0;
}
.recit-para2 .inner-container {
  margin: 0 auto;
}
@media (max-width: 768px) {
  .recit-para2 .inner-container {
    width: 100% !important;
  }
    .no-overflow {
        width: 100%;
    }
}
.recit-para3 {
  padding-top: 60px;
  padding-bottom: 60px;
  background-color: #ffffff;
}
.recit-para3 .recit-section-subtitle {
  color: #767676;
}
.recit-para4 {
  padding-top: 60px;
  padding-bottom: 60px;
  background-color: #ffffff;
}
.recit-para4 .recit-text,
.recit-para4 blockquote {
  color: #767676;
}
.recit-text blockquote {
  color: #767676;
}
.recit-para5 {
  padding-top: 60px;
  padding-bottom: 60px;
  background-color: #ffffff;
}
.recit-para5 .counter-container {
  color: #767676;
}
.recit-para5 .counter-container ul {
  margin-bottom: 0;
}
.recit-para5 .counter-container ul li {
  margin-bottom: 1rem;
  list-style: none;
}
.recit-para5 .counter-container ul li:before {
  position: absolute;
  left: 0px;
  margin-top: -10px;
  padding-top: 3px;
  content: '';
  display: inline-block;
  text-align: center;
  margin: 5px 10px;
  line-height: 20px;
  transition: all .2s;
  color: #ffffff;
  background: #149dcc;
  width: 25px;
  height: 25px;
  border-radius: 50%;
  content: '✓';
}
.recit-para6 {
  padding-top: 60px;
  padding-bottom: 60px;
  background-color: #ffffff;
}
.recit-para6 .counter-container {
  color: #767676;
}
.recit-para6 .counter-container ol {
  margin-bottom: 0;
  counter-reset: myCounter;
}
.recit-para6 .counter-container ol li {
  margin-bottom: 1rem;
}
.recit-para6 .counter-container ol li {
  list-style: none;
  padding-left: .5rem;
}
.recit-para6 .counter-container ol li:before {
  position: absolute;
  left: 0px;
  margin-top: -10px;
  counter-increment: myCounter;
  content: counter(myCounter);
  display: inline-block;
  text-align: center;
  margin: 5px 10px;
  line-height: 40px;
  transition: all .2s;
  color: #ffffff;
  background: #149dcc;
  width: 40px;
  height: 40px;
  border-radius: 50%;
}
.recit-para7 {
  padding-top: 60px;
  padding-bottom: 60px;
 
}


.recit-parallax-background P {
  color: #767676;
}
.recit-parallax-background H1 {
  color: #ffffff;
}
.recit-parallax-background .mbr-text,
.recit-parallax-background .mbr-section-btn {
  color: #efefef;
}
.justify-content-recit-center{-ms-flex-pack:center!important;justify-content:center!important} 

section.section:last-child {
  margin-bottom: 0;
}
section.section h2 {
  margin-bottom: 40px;
  font-family: $subheadings-font-family;
  font-size: 30px;
}
section.section p {
  margin-bottom: 40px;
  font-size: 16px;
  font-weight: 300;
}
section.section p:last-child {
  margin-bottom: 0;
}
section.section.content {
  padding: 40px 0;
}



/*@media all and (min-width: 600px) {
  section.section h2 {
    font-size: 42px;
  }
  section.section p {
    font-size: 20px;
  }
  section.section.parallax h1 {
    font-size: 96px;
  }
}
@media all and (min-width: 960px) {
  section.section.parallax h1 {
    font-size: 160px;
  }
}*/


/*Onglets*/
.recit_tab_1 {
  padding-top: 60px;
  padding-bottom: 60px;
  background-color: #f9f9f9;
}
.recit_tab_1 .recit-section-text {
  color: #767676;
}
.recit_tab_1 .recit-section-subtitle {
  color: #767676;
}
.recit_tab_1 .tabcont {
  -webkit-justify-content: center;
  justify-content: center;
}
.recit_tab_1 .recit-iconfont {
  font-size: 48px;
}
.recit_tab_1 .card-img {
  margin-bottom: 1.5rem;
}
.recit_tab_1 .tab-content-row {
  -webkit-justify-content: center;
  justify-content: center;
}
.recit_tab_1 .tab-content {
  margin-top: 3rem;
  width: 100%;
}
.recit_tab_1 .nav-tabs {
  -webkit-justify-content: center;
  justify-content: center;
  -webkit-flex-wrap: wrap;
  flex-wrap: wrap;
  border-bottom: none;
}
.recit_tab_1 .nav-tabs .nav-link {
  box-sizing: border-box;
  color: #767676;
  font-style: normal;
  font-weight: 500;
  border-radius: 3px;
  padding: 1rem 3rem;
  margin: 0.4rem .8rem !important;
  transition: color .3s;
  border: 2px solid #767676;
}
.recit_tab_1 .nav-tabs .nav-link:hover {
  background: $secondary;
}
.recit_tab_1 .nav-tabs .nav-link.active {
  color: #ffffff;
  font-style: normal;
  border: 2px solid $secondary;
  background: $secondary;
}
.recit_tab_1 .nav-tabs .nav-link.active:hover {
  border: 2px solid $secondary;
}
#banner_video {
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 2;
}
#banner_video:after {
    display: block;
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(255,255,255,0.9);
    z-index: 3;
}
.step-wrapper {
    position: relative;
}
.step-wrapper h5 {
    width: 72px;
    height: 72px;
    line-height: 64px;
    font-size: 36px;
    border-radius: 50%;
    margin: 0 auto 10px;
    border: 2px solid #cccccc;
}
.step-wrapper h5:before {
    left: -15px;
    top: 38px;
    position: absolute;
    content: "";
    height: 2px;
    width: calc(50% + 15px - 36px - 8px);
    background-color: #cccccc;
}
.step-wrapper h5:after {
    left: calc(50% + 8px + 36px);
    top: 38px;
    position: absolute;
    content: "";
    height: 2px;
    width: calc(50% + 15px - 36px - 8px);
    background-color: #cccccc;
}
.modal-dialog {
    max-width: 800px;
    margin: 30px auto;
}
.modal-body {
    position: relative;
    padding: 0;
}

.close {
    position: absolute;
    right: -30px;
    top: 0;
    z-index: 999;
    font-size: 2rem;
    font-weight: normal;
    color: #fff;
    opacity: 1;
}

	@media screen and (orientation:landscape)
{
   .orientation
   { display:none;
      background: $danger!important;
	  position: absolute;
}}
@media (orientation:portrait)
{
   .orientation
   { display: block;
      background: $info;
	  background-image: url("https://www.ca-pca.net/capca_cartes/images/rotate_device.png");
	  background-repeat: no-repeat;
  background-size: contain;
	  position: absolute;
  left: 0;
  top: 50px;
  width: 100%;
  text-align: center;
    vertical-align: center;
  font-size: 18px;
}}

.etienne{
body {
  background-color: #eee;
  height: 100vh;
  margin: 0;
  position: relative;
  overflow: hidden;
}

* {
  box-sizing: border-box;
}

main {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: flex;
  flex-direction: column;
  user-select: none;
}

#top-bar {
  margin: 10px;
  padding: 10px;
  background-color: white;
  box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.3);
  min-height: 119px;
}

#drop-panel {
  min-height: 200px;
  background: white;
  padding: 10px;
  margin: 10px;
  box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.3);

  header {
    padding-left: 10px;
    font-size: 12px;
  }
}

.content {
  flex: 1;
}

#scroll-box {
  border: 1px solid #ccc;
  white-space: nowrap;
  overflow-x: scroll;
}

#tile-container {
  display: inline-flex;
}

.tile-wrapper {
  width: 80px;
  height: 80px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  position: relative;
}

.tile {
  background-color: mediumvioletred;
  color: #fafafa;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 24px;
  position: relative;
  width: 60px;
  height: 60px;
  cursor: move;
  box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.5);
  overflow: hidden;

  &.clone {
    position: absolute;
    opacity: 0;
    visibility: hidden;
  }

  &.dropped {
    background: cornflowerblue;
  }
}}